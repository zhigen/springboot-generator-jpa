# 日志格式
logging.pattern.console=%d{HH:mm:ss} [%t] %-5level %logger{36} - %msg%n
# 数据库连接属性
spring.datasource.url=jdbc:mysql://localhost:3306/information_schema
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# jpa打印sql
spring.jpa.show-sql=true
# 代码生成相关配置
# 指定要生成的数据库
generator.config.database=zglu
# 指定表，空则生成全表
generator.config.tables=zglu_test
# 作者
generator.config.author=zglu
# 生成所在文件夹，不建议改动，因target文件夹在过滤文件里已有过滤，可避免将生成文件上传git
generator.config.target-dir=target
# 数据库对于可空字段的标识
generator.config.nullable-true=YES
# 数据库对于bit类型字段数值为1的默认值标识
generator.config.default-bit-true=b'1'
# mysql数据类型与java数据类型对应关系
generator.config.field.bigint=BigInteger
generator.config.field.bit=Boolean
generator.config.field.blob=Byte[]
generator.config.field.char=String
generator.config.field.date=LocalDate
generator.config.field.datetime=LocalDateTime
generator.config.field.decimal=BigDecimal
generator.config.field.double=BigDecimal
generator.config.field.float=BigDecimal
generator.config.field.int=Long
generator.config.field.integer=Long
generator.config.field.longblob=Byte[]
generator.config.field.longtext=String
generator.config.field.mediumblob=Byte[]
generator.config.field.mediumint=Integer
generator.config.field.mediumtext=String
generator.config.field.numeric=BigDecimal
generator.config.field.smallint=Integer
generator.config.field.text=String
generator.config.field.time=LocalTime
generator.config.field.timestamp=LocalDateTime
generator.config.field.tinyblob=Byte[]
generator.config.field.tinyint=Integer
generator.config.field.tinytext=String
generator.config.field.varchar=String
generator.config.field.year=LocalDate
# java数据类型与导入包对应关系
generator.config.import-map.BigDecimal=import java.math.BigDecimal
generator.config.import-map.BigInteger=import java.math.BigInteger
generator.config.import-map.LocalDate=import java.time.LocalDate
generator.config.import-map.LocalDateTime=import java.time.LocalDateTime
generator.config.import-map.LocalDateTime-value=import java.time.format.DateTimeFormatter
generator.config.import-map.LocalTime=import java.time.LocalTime
# java属性默认值与数据库默认值对应关系
generator.config.value-map.BigDecimal=BigDecimal.valueOf(?1)
generator.config.value-map.BigDecimal-new=BigDecimal.valueOf(0)
generator.config.value-map.BigInteger=BigInteger.valueOf(?1L)
generator.config.value-map.BigInteger-new=BigInteger.valueOf(0L)
generator.config.value-map.Boolean=?1
generator.config.value-map.Boolean-new=false
generator.config.value-map.Byte[]=null
generator.config.value-map.Byte[]-new=new Byte[0]
generator.config.value-map.Integer=?1
generator.config.value-map.Integer-new=0
generator.config.value-map.LocalDate=LocalDate.parse(\"?1\")
generator.config.value-map.LocalDate-new=LocalDate.now()
generator.config.value-map.LocalDateTime=LocalDateTime.parse(\"?1\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"))
generator.config.value-map.LocalDateTime-new=LocalDateTime.now()
generator.config.value-map.LocalTime=LocalTime.parse(\"?1\")
generator.config.value-map.LocalTime-new=LocalTime.now()
generator.config.value-map.Long=?1L
generator.config.value-map.Long-new=0L
generator.config.value-map.String=\"?1\"
generator.config.value-map.String-new=\"\"